
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://krhddximfgpnlciakfga.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtyaGRkeGltZmdwbmxjaWFrZmdhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA0NDUwMzMsImV4cCI6MjA2NjAyMTAzM30.HnvBXVIKCUbbc83CW75EVpToHbAGugACHVhH1ty0AGk";

// Enhanced configuration for Vercel production domain
const getSupabaseOptions = () => {
  const isProductionCustomDomain = window.location.hostname === 'minhaconta.agromercado.tv.br';
  
  return {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true,
    },
    realtime: {
      params: {
        eventsPerSecond: 10,
      },
      heartbeatIntervalMs: isProductionCustomDomain ? 30000 : 15000,
      reconnectAfterMs: (tries: number) => {
        const delays = isProductionCustomDomain 
          ? [1000, 2000, 5000, 10000] 
          : [1000, 2000, 5000];
        return delays[tries - 1] || (isProductionCustomDomain ? 10000 : 5000);
      },
      timeout: isProductionCustomDomain ? 10000 : 7000,
      logger: (kind: string, msg: string, data?: any) => {
        if (isProductionCustomDomain) {
          console.log(`🔌 Realtime [${kind}]:`, msg, data);
        }
      }
    },
    global: {
      headers: isProductionCustomDomain ? {
        'Cache-Control': 'no-cache, no-store, must-revalidate',
        'Pragma': 'no-cache'
      } : {}
    }
  };
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  getSupabaseOptions()
);

// Enhanced connection monitoring for Vercel domain
if (window.location.hostname === 'minhaconta.agromercado.tv.br') {
  console.log('🌐 Enhanced Supabase configuration applied for production domain');
  
  // Monitor auth state changes more closely on production
  supabase.auth.onAuthStateChange((event, session) => {
    console.log('🔐 Auth state change on production:', event, session?.user?.email || 'no user');
  });
}
